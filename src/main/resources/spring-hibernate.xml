<?xml version="1.0" encoding="UTF-8"?>
<beans xmlns="http://www.springframework.org/schema/beans"
	xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xmlns:context="http://www.springframework.org/schema/context"
	xmlns:mvc="http://www.springframework.org/schema/mvc"
	xmlns:tx="http://www.springframework.org/schema/tx"
	xsi:schemaLocation="http://www.springframework.org/schema/beans   
	http://www.springframework.org/schema/beans/spring-beans.xsd
	http://www.springframework.org/schema/tx http://www.springframework.org/schema/tx/spring-tx.xsd">
	<tx:annotation-driven transaction-manager="transactionManager"/>
	<!-- spring的属性加载器，加载properties文件中的属性 -->
	<bean id="propertyConfigurer"
		class="org.springframework.beans.factory.config.PropertyPlaceholderConfigurer">
		<property name="locations">
			<list>
				<value>classpath:jdbc-config.properties</value>
			</list>
		</property>
		<property name="fileEncoding" value="utf-8" />
	</bean>
	<!-- 配置数据源 -->
	<bean id="dataSource"
		class="org.springframework.jdbc.datasource.DriverManagerDataSource">
		<property name="driverClassName" value="${driverClassName}"></property>
		<property name="url" value="${url}"></property>
		<property name="username" value="${username}"></property>
		<property name="password" value="${password}"></property>
	</bean>
	<!-- 配置SessionFactory -->
	<bean id="sessionFactory"
		class="org.springframework.orm.hibernate4.LocalSessionFactoryBean">
		<property name="dataSource" ref="dataSource" />
		<property name="hibernateProperties">
			<props>
				<prop key="hibernate.dialect">org.hibernate.dialect.MySQLDialect</prop>
				<prop key="hibernate.hbm2ddl.auto">update</prop>
				<prop key="hibernate.show_sql">true</prop>
				<!-- 开启二级缓存 -->  
                <prop key="hibernate.cache.use_second_level_cache">true</prop>
                <!-- 启用查询缓存 -->  
                <prop key="hibernate.cache.use_query_cache">true</prop>
                <!-- 配置二级缓存提供商 -->  
                <prop key="hibernate.cache.region.factory_class">org.hibernate.cache.ehcache.SingletonEhCacheRegionFactory</prop>
                <!-- 加载缓存所需配置文件 -->  
                <prop key="hibernate.net.sf.ehcache.configurationResourceName">classpath:ehcache.xml</prop>    
				<!--<prop key="hibernate.format_sql">true</prop>-->
			</props>
		</property>
		<property name="annotatedClasses">
			<list>
				<!-- 可以加多个包 -->
				<value>com.xll.pojo.AdminAccount</value>
				<value>com.xll.pojo.Category</value>
				<value>com.xll.pojo.Product</value>
			</list>
		</property>
	</bean>
	<!-- 配置一个事务管理器 -->
	<bean id="transactionManager"
		class="org.springframework.orm.hibernate4.HibernateTransactionManager">
		<property name="sessionFactory" ref="sessionFactory" />
	</bean>
	<!--=================================================================-->
	<!--  声明式容器事务管理 ,transaction-manager指定事务管理器为transactionManager 
	      REQUIRED表示如果存在事务，则支持当前的事务，如果没有则创建一个新的事务，这个事务模式应用
		      在所有以save、update和delete开头的方法上，也就是说对数据库的增删改的时候需要添加事务支持。
		  SUPPORTS表示如果存在事务，则支持当前的事务，如果没有就算了。-->
	<!--=================================================================-->
	<tx:advice id="advice" transaction-manager="transactionManager">  
	    <tx:attributes>  
	        <tx:method name="save*" propagation="REQUIRED"/>  
	        <tx:method name="update*" propagation="REQUIRED"/>  
	        <tx:method name="delete*" propagation="REQUIRED"/>  
	        <tx:method name="*" propagation="SUPPORTS"/>  
	    </tx:attributes>  
	</tx:advice>
</beans>  